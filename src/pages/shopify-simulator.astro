<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>UltraRealistic Shopify Simulator</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <style>
        :root {
            --shopify-green: #008060;
            --shopify-light-green: #00a672;
            --shopify-text: #212b36;
            --shopify-secondary: #637381;
            --shopify-border: #dfe3e8;
            --shopify-background: #f4f6f8;
            --phone-width: 375px;
            --phone-height: 812px;
            --phone-border-radius: 40px;
            --phone-frame-color: #1a1a1a;
        }
        
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
            background-color: #f5f7fa;
            color: var(--shopify-text);
            line-height: 1.5;
            padding: 0;
            margin: 0;
            overflow-x: hidden;
        }

        /* Navigation and Layout */
        .top-nav {
            background-color: #1c2433;
            color: white;
            padding: 15px 20px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            z-index: 100;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        }
        
        .logo {
            font-weight: 700;
            font-size: 24px;
            display: flex;
            align-items: center;
        }
        
        .logo span {
            color: var(--shopify-green);
            margin-right: 8px;
        }
        
        .top-nav-links {
            display: flex;
            gap: 20px;
        }
        
        .top-nav-links a {
            color: white;
            text-decoration: none;
            font-weight: 500;
            padding: 5px 10px;
            border-radius: 4px;
            transition: background-color 0.2s;
        }
        
        .top-nav-links a:hover {
            background-color: rgba(255, 255, 255, 0.1);
        }
        
        .container {
            max-width: 1200px;
            margin: 80px auto 40px;
            padding: 20px;
        }
        
        /* Tabs Navigation */
        .tabs {
            display: flex;
            margin-bottom: 20px;
            background-color: white;
            border-radius: 8px;
            overflow: hidden;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
        }
        
        .tab {
            padding: 15px 25px;
            cursor: pointer;
            background-color: white;
            border: none;
            font-weight: 600;
            font-size: 16px;
            color: var(--shopify-secondary);
            transition: all 0.2s;
            flex: 1;
            text-align: center;
            border-bottom: 3px solid transparent;
        }
        
        .tab.active {
            color: var(--shopify-green);
            border-bottom: 3px solid var(--shopify-green);
        }
        
        .tab:hover:not(.active) {
            background-color: var(--shopify-background);
        }
        
        /* Main Content Layout */
        .content {
            display: none;
            background-color: white;
            border-radius: 8px;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
            padding: 20px;
            animation: fadeIn 0.3s ease-in-out;
        }
        
        .content.active {
            display: block;
        }
        
        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }
        
        /* Form Elements */
        .section-title {
            font-size: 18px;
            font-weight: 600;
            margin-bottom: 20px;
            color: var(--shopify-text);
            display: flex;
            align-items: center;
        }
        
        .section-title svg {
            margin-right: 10px;
        }
        
        .form-row {
            display: flex;
            flex-wrap: wrap;
            gap: 20px;
            margin-bottom: 20px;
        }
        
        .form-group {
            flex: 1;
            min-width: 250px;
        }
        
        label {
            display: block;
            margin-bottom: 8px;
            font-weight: 500;
            color: var(--shopify-text);
        }
        
        input, select, textarea {
            width: 100%;
            padding: 12px;
            border: 1px solid var(--shopify-border);
            border-radius: 4px;
            font-size: 16px;
            transition: border-color 0.2s;
            font-family: inherit;
        }
        
        input:focus, select:focus, textarea:focus {
            outline: none;
            border-color: var(--shopify-green);
            box-shadow: 0 0 0 3px rgba(0, 128, 96, 0.1);
        }
        
        button {
            background-color: var(--shopify-green);
            color: white;
            border: none;
            padding: 12px 20px;
            font-size: 16px;
            border-radius: 4px;
            cursor: pointer;
            font-weight: 600;
            transition: background-color 0.2s;
        }
        
        button:hover {
            background-color: var(--shopify-light-green);
        }
        
        button.secondary {
            background-color: white;
            color: var(--shopify-text);
            border: 1px solid var(--shopify-border);
        }
        
        button.secondary:hover {
            background-color: var(--shopify-background);
        }
        
        /* Custom Color Picker */
        .color-picker {
            display: flex;
            gap: 10px;
            flex-wrap: wrap;
            margin-top: 10px;
        }
        
        .color-option {
            width: 30px;
            height: 30px;
            border-radius: 50%;
            cursor: pointer;
            border: 2px solid transparent;
            transition: transform 0.2s;
        }
        
        .color-option:hover {
            transform: scale(1.1);
        }
        
        .color-option.selected {
            border: 2px solid var(--shopify-text);
        }
        
        /* Phone Simulator */
        .preview-container {
            display: flex;
            flex-wrap: wrap;
            gap: 40px;
            align-items: flex-start;
            margin-top: 40px;
        }
        
        .phone-simulator {
            position: relative;
            width: var(--phone-width);
            height: var(--phone-height);
            background-color: white;
            border-radius: var(--phone-border-radius);
            overflow: hidden;
            box-shadow: 
                0 50px 100px rgba(0, 0, 0, 0.15),
                0 10px 30px rgba(0, 0, 0, 0.1),
                inset 0 0 0 2px rgba(255, 255, 255, 0.05);
            margin: 0 auto;
            transition: transform 0.3s ease;
        }
        
        .phone-frame {
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            border: 14px solid var(--phone-frame-color);
            border-radius: var(--phone-border-radius);
            overflow: hidden;
            background-image: url('https://i.imgur.com/mO3j0KT.jpg');
            background-size: cover;
            background-position: center;
        }
        
        .phone-notch {
            position: absolute;
            top: 0;
            left: 50%;
            transform: translateX(-50%);
            width: 180px;
            height: 30px;
            background-color: var(--phone-frame-color);
            border-bottom-left-radius: 14px;
            border-bottom-right-radius: 14px;
            z-index: 10;
        }
        
        .status-bar {
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 44px;
            padding: 0 20px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            color: white;
            font-size: 14px;
            font-weight: 600;
            z-index: 5;
        }
        
        .status-bar-left, .status-bar-right {
            display: flex;
            align-items: center;
            gap: 5px;
        }
        
        /* Shopify Dashboard */
        .dashboard-simulator {
            flex: 1;
            min-width: 600px;
            height: 600px;
            background-color: white;
            border-radius: 8px;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
            overflow: hidden;
            display: flex;
            flex-direction: column;
        }
        
        .dashboard-header {
            background-color: #1c2433;
            color: white;
            padding: 15px;
            display: flex;
            align-items: center;
            gap: 15px;
        }
        
        .dashboard-logo {
            font-weight: 700;
            font-size: 20px;
        }
        
        .dashboard-nav {
            background-color: #f4f6f8;
            padding: 10px 15px;
            border-bottom: 1px solid #dfe3e8;
        }
        
        .dashboard-nav-list {
            display: flex;
            gap: 20px;
            list-style: none;
        }
        
        .dashboard-nav-item {
            font-weight: 500;
            color: var(--shopify-text);
            padding: 8px 0;
            border-bottom: 2px solid transparent;
            cursor: pointer;
        }
        
        .dashboard-nav-item.active {
            color: var(--shopify-green);
            border-bottom: 2px solid var(--shopify-green);
        }
        
        .dashboard-content {
            padding: 20px;
            flex: 1;
            overflow-y: auto;
        }
        
        .dashboard-cards {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }
        
        .dashboard-card {
            background-color: white;
            border: 1px solid var(--shopify-border);
            border-radius: 8px;
            padding: 20px;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);
        }
        
        .card-title {
            font-size: 14px;
            color: var(--shopify-secondary);
            margin-bottom: 10px;
        }
        
        .card-value {
            font-size: 24px;
            font-weight: 600;
            color: var(--shopify-text);
        }
        
        .card-change {
            font-size: 14px;
            color: #50b83c;
            display: flex;
            align-items: center;
            gap: 5px;
            margin-top: 5px;
        }
        
        .card-change.negative {
            color: #de3618;
        }
        
        /* Notification Styles */
        .notification {
            position: absolute;
            top: 60px;
            left: 20px;
            right: 20px;
            background-color: rgba(255, 255, 255, 0.95);
            border-radius: 12px;
            box-shadow: 0 2px 15px rgba(0, 0, 0, 0.2);
            padding: 12px;
            animation: slideIn 0.5s forwards, slideOut 0.5s forwards 5s;
            z-index: 100;
            backdrop-filter: blur(20px);
            -webkit-backdrop-filter: blur(20px);
            display: none;
            transform: translateY(-120%);
        }
        
        @keyframes slideIn {
            from { transform: translateY(-120%); }
            to { transform: translateY(0); }
        }
        
        @keyframes slideOut {
            from { transform: translateY(0); opacity: 1; }
            to { transform: translateY(-120%); opacity: 0; }
        }
        
        .notification-header {
            display: flex;
            align-items: center;
            margin-bottom: 8px;
            justify-content: space-between;
        }
        
        .notification-app {
            display: flex;
            align-items: center;
            gap: 8px;
        }
        
        .app-icon {
            width: 22px;
            height: 22px;
            background-color: var(--shopify-green);
            border-radius: 5px;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-weight: bold;
            font-size: 12px;
        }
        
        .app-name {
            font-weight: 600;
            font-size: 14px;
        }
        
        .notification-time {
            font-size: 12px;
            color: var(--shopify-secondary);
        }
        
        .notification-body {
            font-size: 14px;
            line-height: 1.4;
        }
        
        /* Controls */
        .controls {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
            margin-top: 30px;
            justify-content: center;
        }
        
        .action-buttons {
            display: flex;
            gap: 10px;
            margin-top: 20px;
            justify-content: flex-end;
        }
        
        /* Settings & Record Panel */
        .settings-panel {
            background-color: white;
            border-radius: 8px;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
            padding: 20px;
            margin-top: 30px;
        }
        
        .panel-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }
        
        .panel-title {
            font-size: 18px;
            font-weight: 600;
        }
        
        .timeline {
            display: flex;
            align-items: center;
            gap: 10px;
            margin-top: 20px;
        }
        
        .timeline-bar {
            flex: 1;
            height: 6px;
            background-color: var(--shopify-border);
            border-radius: 3px;
            position: relative;
        }
        
        .timeline-progress {
            position: absolute;
            height: 100%;
            background-color: var(--shopify-green);
            border-radius: 3px;
            width: 0%;
            transition: width 0.1s linear;
        }
        
        .timeline-time {
            font-size: 14px;
            color: var(--shopify-secondary);
            font-weight: 500;
            width: 70px;
            text-align: right;
        }
        
        .record-button {
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 10px;
            background-color: #de3618;
            padding: 12px 25px;
        }
        
        .record-button svg {
            width: 16px;
            height: 16px;
        }
        
        .record-button.recording {
            background-color: #50b83c;
        }
        
        .record-button.recording span:after {
            content: "Stop Recording";
        }
        
        .record-button span:after {
            content: "Start Recording";
        }
        
        /* Order Items */
        .order-items {
            margin-top: 15px;
            border: 1px solid var(--shopify-border);
            border-radius: 6px;
            overflow: hidden;
        }
        
        .order-item {
            display: flex;
            align-items: center;
            padding: 12px 15px;
            border-bottom: 1px solid var(--shopify-border);
            transition: background-color 0.2s;
        }
        
        .order-item:last-child {
            border-bottom: none;
        }
        
        .order-item:hover {
            background-color: var(--shopify-background);
        }
        
        .order-item-image {
            width: 50px;
            height: 50px;
            border-radius: 4px;
            background-color: var(--shopify-background);
            margin-right: 15px;
            display: flex;
            align-items: center;
            justify-content: center;
            overflow: hidden;
        }
        
        .order-item-image img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }
        
        .order-item-details {
            flex: 1;
        }
        
        .order-item-name {
            font-weight: 500;
            margin-bottom: 4px;
        }
        
        .order-item-variant {
            font-size: 14px;
            color: var(--shopify-secondary);
        }
        
        .order-item-price {
            font-weight: 600;
            margin-left: 15px;
        }
        
        /* Recent Orders Table */
        .recent-orders {
            margin-top: 30px;
        }
        
        .orders-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
        }
        
        .orders-title {
            font-size: 18px;
            font-weight: 600;
        }
        
        .orders-table {
            width: 100%;
            border-collapse: collapse;
        }
        
        .orders-table th {
            text-align: left;
            padding: 12px 15px;
            border-bottom: 1px solid var(--shopify-border);
            color: var(--shopify-secondary);
            font-weight: 500;
        }
        
        .orders-table td {
            padding: 12px 15px;
            border-bottom: 1px solid var(--shopify-border);
        }
        
        .orders-table tr:last-child td {
            border-bottom: none;
        }
        
        .orders-table tr:hover td {
            background-color: var(--shopify-background);
        }
        
        .order-status {
            display: inline-block;
            padding: 4px 8px;
            font-size: 12px;
            font-weight: 500;
            border-radius: 4px;
        }
        
        .status-paid {
            background-color: rgba(80, 184, 60, 0.1);
            color: #50b83c;
        }
        
        .status-unfulfilled {
            background-color: rgba(238, 187, 28, 0.1);
            color: #eebb1c;
        }
        
        .status-fulfilled {
            background-color: rgba(80, 184, 60, 0.1);
            color: #50b83c;
        }
        
        /* Responsive Design */
        @media (max-width: 1200px) {
            .preview-container {
                flex-direction: column;
                align-items: center;
            }
            
            .dashboard-simulator {
                min-width: 100%;
                margin-top: 40px;
            }
        }
        
        @media (max-width: 768px) {
            .form-row {
                flex-direction: column;
                gap: 15px;
            }
            
            .form-group {
                min-width: 100%;
            }
            
            .dashboard-cards {
                grid-template-columns: 1fr;
            }
        }
        
        /* Loading Spinner */
        .loader {
            border: 4px solid rgba(0, 128, 96, 0.1);
            border-radius: 50%;
            border-top: 4px solid var(--shopify-green);
            width: 30px;
            height: 30px;
            animation: spin 1s linear infinite;
            margin: 20px auto;
            display: none;
        }
        
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
        
        /* Copied Notification */
        .copied-notification {
            position: fixed;
            bottom: 20px;
            left: 50%;
            transform: translateX(-50%);
            background-color: var(--shopify-text);
            color: white;
            padding: 12px 20px;
            border-radius: 4px;
            font-weight: 500;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            z-index: 1000;
            opacity: 0;
            pointer-events: none;
            transition: opacity 0.3s;
        }
        
        .copied-notification.show {
            opacity: 1;
        }
        
        /* Download Modal */
        .modal-overlay {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: rgba(33, 43, 54, 0.5);
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 1000;
            opacity: 0;
            pointer-events: none;
            transition: opacity 0.3s;
        }
        
        .modal-overlay.show {
            opacity: 1;
            pointer-events: auto;
        }
        
        .modal {
            background-color: white;
            border-radius: 8px;
            width: 90%;
            max-width: 500px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
            padding: 30px;
            transform: translateY(20px);
            transition: transform 0.3s;
        }
        
        .modal-overlay.show .modal {
            transform: translateY(0);
        }
        
        .modal-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }
        
        .modal-title {
            font-size: 20px;
            font-weight: 600;
        }
        
        .modal-close {
            background: none;
            border: none;
            padding: 5px;
            cursor: pointer;
            color: var(--shopify-secondary);
        }
        
        .download-options {
            display: flex;
            flex-direction: column;
            gap: 15px;
            margin-top: 15px;
        }
        
        .download-option {
            display: flex;
            align-items: center;
            gap: 15px;
            padding: 15px;
            border: 1px solid var(--shopify-border);
            border-radius: 6px;
            cursor: pointer;
            transition: background-color 0.2s, border-color 0.2s;
        }
        
        .download-option:hover {
            background-color: var(--shopify-background);
            border-color: var(--shopify-green);
        }
        
        .download-option-icon {
            width: 40px;
            height: 40px;
            display: flex;
            align-items: center;
            justify-content: center;
            background-color: var(--shopify-background);
            border-radius: 8px;
            color: var(--shopify-green);
        }
        
        .download-option-text {
            flex: 1;
        }
        
        .download-option-title {
            font-weight: 600;
            margin-bottom: 2px;
        }
        
        .download-option-description {
            font-size: 14px;
            color: var(--shopify-secondary);
        }
    </style>
</head>
<body>
    <!-- Top Navigation -->
    <header class="top-nav">
        <div class="logo">
            <span>S</span> UltraRealistic Shopify Simulator
        </div>
        <div class="top-nav-links">
            <a href="#" class="active">Simulator</a>
            <a href="#">Docs</a>
            <a href="#">Examples</a>
        </div>
    </header>

    <div class="container">
        <!-- Tab Navigation -->
        <div class="tabs">
            <button class="tab active" data-tab="notification">Mobile Notification</button>
            <button class="tab" data-tab="dashboard">Shopify Dashboard</button>
            <button class="tab" data-tab="recording">Recording & Export</button>
        </div>

        <!-- Notification Tab Content -->
        <div id="notification-tab" class="content active">
            <div class="section-title">
                <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M12 22C13.1 22 14 21.1 14 20H10C10 21.1 10.9 22 12 22ZM18 16V11C18 7.93 16.37 5.36 13.5 4.68V4C13.5 3.17 12.83 2.5 12 2.5C11.17 2.5 10.5 3.17 10.5 4V4.68C7.64 5.36 6 7.92 6 11V16L4 18V19H20V18L18 16ZM16 17H8V11C8 8.52 9.51 6.5 12 6.5C14.49 6.5 16 8.52 16 11V17Z" fill="currentColor"/>
                </svg>
                Configure Notification
            </div>
            
            <div class="form-row">
                <div class="form-group">
                    <label for="customer-name">Customer Name</label>
                    <input type="text" id="customer-name" placeholder="John Smith" value="Sarah Johnson">
                </div>
                
                <div class="form-group">
                    <label for="location">Location</label>
                    <input type="text" id="location" placeholder="New York, NY" value="San Francisco, CA">
                </div>
            </div>
            
            <div class="form-row">
                <div class="form-group">
                    <label for="amount">Order Amount</label>
                    <input type="text" id="amount" placeholder="$49.99" value="$127.50">
                </div>
                
                <div class="form-group">
                    <label for="time">Time</label>
                    <select id="time">
                        <option value="Just now" selected>Just now</option>
                        <option value="1 minute ago">1 minute ago</option>
                        <option value="5 minutes ago">5 minutes ago</option>
                        <option value="10 minutes ago">10 minutes ago</option>
                    </select>
                </div>
            </div>
            
            <div class="form-row">
                <div class="form-group">
                    <label for="notification-type">Notification Type</label>
                    <select id="notification-type">
                        <option value="new-order" selected>New Order</option>
                        <option value="abandoned-cart">Abandoned Cart</option>
                        <option value="customer-signup">New Customer</option>
                        <option value="revenue-goal">Revenue Goal Reached</option>
                    </select>
                </div>
                
                <div class="form-group">
                    <label for="product-name">Product Name (Optional)</label>
                    <input type="text" id="product-name" placeholder="Premium Headphones" value="Premium Yoga Mat">
                </div>
            </div>
            
            <div class="action-buttons">
                <button id="preview-notification" class="secondary">Preview</button>
                <button id="generate-notification">Generate Notification</button>
            </div>
            
            <div class="preview-container">
                <div class="phone-simulator">
                    <div class="phone-frame">
                        <div class="phone-notch"></div>
                        
                        <div class="status-bar">
                            <div class="status-bar-left">
                                <span class="time">9:41</span>
                            </div>
                            <div class="status-bar-right">
                                <span>5G</span>
                                <span>100%</span>
                            </div>
                        </div>
                        
                        <div id="notification" class="notification">
                            <div class="notification-header">
                                <div class="notification-app">
                                    <div class="app-icon">
                                        <span>S</span>
                                    </div>
                                    <div class="app-name">Shopify</div>
                                </div>
                                <div class="notification-time" id="notification-time">Just now</div>
                            </div>
                            <div class="notification-body" id="notification-message">
                                New order of $127.50 from Sarah in San Francisco, CA!
                            </div>
                        </div>
                    </div>
                </div>
                
                <!-- Dashboard Simulator (will be shown in dashboard tab) -->
                <div class="dashboard-simulator" style="display: none;">
                    <div class="dashboard-header">
                        <div class="dashboard-logo">Shopify</div>
                    </div>
                    
                    <div class="dashboard-nav">
                        <ul class="dashboard-nav-list">
                            <li class="dashboard-nav-item active">Home</li>
                            <li class="dashboard-nav-item">Orders</li>
                            <li class="dashboard-nav-item">Products</li>
                            <li class="dashboard-nav-item">Customers</li>
                            <li class="dashboard-nav-item">Analytics</li>
                        </ul>
                    </div>
                    
                    <div class="dashboard-content">
                        <div class="dashboard-cards">
                            <div class="dashboard-card">
                                <div class="card-title">TOTAL SALES</div>
                                <div class="card-value" id="dashboard-total-sales">$5,432.21</div>
                                <div class="card-change">
                                    <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                                        <path d="M8 4L12 8H9V12H7V8H4L8 4Z" fill="currentColor"/>
                                    </svg>
                                    <span>12% from last week</span>
                                </div>
                            </div>
                            
                            <div class="dashboard-card">
                                <div class="card-title">ORDERS</div>
                                <div class="card-value" id="dashboard-orders">42</div>
                                <div class="card-change">
                                    <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                                        <path d="M8 4L12 8H9V12H7V8H4L8 4Z" fill="currentColor"/>
                                    </svg>
                                    <span>7% from last week</span>
                                </div>
                            </div>
                            
                            <div class="dashboard-card">
                                <div class="card-title">CONVERSION RATE</div>
                                <div class="card-value" id="dashboard-conversion">3.2%</div>
                                <div class="card-change">
                                    <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                                        <path d="M8 12L4 8H7V4H9V8H12L8 12Z" fill="currentColor"/>
                                    </svg>
                                    <span class="negative">0.5% from last week</span>
                                </div>
                            </div>
                            
                            <div class="dashboard-card">
                                <div class="card-title">VISITORS</div>
                                <div class="card-value" id="dashboard-visitors">1,324</div>
                                <div class="card-change">
                                    <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                                        <path d="M8 4L12 8H9V12H7V8H4L8 4Z" fill="currentColor"/>
                                    </svg>
                                    <span>18% from last week</span>
                                </div>
                            </div>
                        </div>
                        
                        <div class="recent-orders">
                            <div class="orders-header">
                                <div class="orders-title">Recent Orders</div>
                            </div>
                            
                            <table class="orders-table">
                                <thead>
                                    <tr>
                                        <th>Order</th>
                                        <th>Date</th>
                                        <th>Customer</th>
                                        <th>Total</th>
                                        <th>Payment</th>
                                        <th>Fulfillment</th>
                                    </tr>
                                </thead>
                                <tbody id="orders-tbody">
                                    <!-- Orders will be populated dynamically -->
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Dashboard Tab Content -->
        <div id="dashboard-tab" class="content">
            <div class="section-title">
                <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M3 13H11V3H3V13ZM3 21H11V15H3V21ZM13 21H21V11H13V21ZM13 3V9H21V3H13Z" fill="currentColor"/>
                </svg>
                Configure Dashboard
            </div>
            
            <div class="form-row">
                <div class="form-group">
                    <label for="store-name">Store Name</label>
                    <input type="text" id="store-name" placeholder="Your Store Name" value="ZenLife Essentials">
                </div>
                
                <div class="form-group">
                    <label for="total-sales">Total Sales</label>
                    <input type="text" id="total-sales" placeholder="$1,234.56" value="$5,432.21">
                </div>
            </div>
            
            <div class="form-row">
                <div class="form-group">
                    <label for="orders-count">Orders Count</label>
                    <input type="number" id="orders-count" placeholder="42" value="42">
                </div>
                
                <div class="form-group">
                    <label for="conversion-rate">Conversion Rate</label>
                    <input type="text" id="conversion-rate" placeholder="3.2%" value="3.2%">
                </div>
            </div>
            
            <div class="form-row">
                <div class="form-group">
                    <label for="visitors-count">Visitors Count</label>
                    <input type="number" id="visitors-count" placeholder="1,324" value="1,324">
                </div>
                
                <div class="form-group">
                    <label for="time-period">Time Period</label>
                    <select id="time-period">
                        <option value="today">Today</option>
                        <option value="yesterday">Yesterday</option>
                        <option value="last7" selected>Last 7 days</option>
                        <option value="last30">Last 30 days</option>
                    </select>
                </div>
            </div>
            
            <div class="form-group">
                <label>Add Recent Orders</label>
                <div id="orders-container">
                    <div class="order-items">
                        <div class="order-item">
                            <div class="order-item-image">
                                <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <path d="M19 3H5C3.9 3 3 3.9 3 5V19C3 20.1 3.9 21 5 21H19C20.1 21 21 20.1 21 19V5C21 3.9 20.1 3 19 3ZM19 19H5V5H19V19ZM13.96 12.29L11.21 15.83L9.25 13.47L6.5 17H17.5L13.96 12.29Z" fill="currentColor"/>
                                </svg>
                            </div>
                            <div class="order-item-details">
                                <div class="order-item-name">#1001 - Sarah Johnson</div>
                                <div class="order-item-variant">Premium Yoga Mat</div>
                            </div>
                            <div class="order-item-price">$127.50</div>
                        </div>
                        <div class="order-item">
                            <div class="order-item-image">
                                <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <path d="M19 3H5C3.9 3 3 3.9 3 5V19C3 20.1 3.9 21 5 21H19C20.1 21 21 20.1 21 19V5C21 3.9 20.1 3 19 3ZM19 19H5V5H19V19ZM13.96 12.29L11.21 15.83L9.25 13.47L6.5 17H17.5L13.96 12.29Z" fill="currentColor"/>
                                </svg>
                            </div>
                            <div class="order-item-details">
                                <div class="order-item-name">#1000 - Michael Smith</div>
                                <div class="order-item-variant">Meditation Cushion Set</div>
                            </div>
                            <div class="order-item-price">$89.99</div>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="action-buttons">
                <button id="add-order" class="secondary">+ Add Order</button>
                <button id="update-dashboard">Update Dashboard</button>
            </div>
        </div>

        <!-- Recording Tab Content -->
        <div id="recording-tab" class="content">
            <div class="section-title">
                <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M17 10.5V7C17 6.45 16.55 6 16 6H4C3.45 6 3 6.45 3 7V17C3 17.55 3.45 18 4 18H16C16.55 18 17 17.55 17 17V13.5L21 17.5V6.5L17 10.5Z" fill="currentColor"/>
                </svg>
                Record and Export
            </div>
            
            <div class="form-row">
                <div class="form-group">
                    <label for="recording-type">What to Record</label>
                    <select id="recording-type">
                        <option value="notification">Mobile Notification</option>
                        <option value="dashboard">Shopify Dashboard</option>
                        <option value="both">Notification + Dashboard</option>
                    </select>
                </div>
                
                <div class="form-group">
                    <label for="recording-format">Output Format</label>
                    <select id="recording-format">
                        <option value="video">MP4 Video</option>
                        <option value="gif">GIF Animation</option>
                    </select>
                </div>
            </div>
            
            <div class="form-row">
                <div class="form-group">
                    <label for="recording-duration">Duration (seconds)</label>
                    <input type="number" id="recording-duration" min="3" max="30" value="5">
                </div>
                
                <div class="form-group">
                    <label for="recording-quality">Quality</label>
                    <select id="recording-quality">
                        <option value="high">High (1080p)</option>
                        <option value="medium" selected>Medium (720p)</option>
                        <option value="low">Low (480p)</option>
                    </select>
                </div>
            </div>
            
            <div class="settings-panel">
                <div class="panel-header">
                    <div class="panel-title">Recording Controls</div>
                </div>
                
                <p>Start recording to capture your configured notification or dashboard. The recording will automatically stop after the specified duration.</p>
                
                <div class="timeline">
                    <div class="timeline-bar">
                        <div class="timeline-progress" id="recording-progress"></div>
                    </div>
                    <div class="timeline-time" id="recording-time">0:00</div>
                </div>
                
                <div class="controls">
                    <button id="record-button" class="record-button">
                        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <circle cx="12" cy="12" r="8" fill="white"/>
                        </svg>
                        <span></span>
                    </button>
                    
                    <button id="download-button" disabled>
                        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M19 9H15V3H9V9H5L12 16L19 9ZM5 18V20H19V18H5Z" fill="currentColor"/>
                        </svg>
                        Download
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Download Modal -->
    <div class="modal-overlay" id="download-modal">
        <div class="modal">
            <div class="modal-header">
                <div class="modal-title">Download Your Simulation</div>
                <button class="modal-close" id="modal-close">
                    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M19 6.41L17.59 5L12 10.59L6.41 5L5 6.41L10.59 12L5 17.59L6.41 19L12 13.41L17.59 19L19 17.59L13.41 12L19 6.41Z" fill="currentColor"/>
                    </svg>
                </button>
            </div>
            
            <p>Your simulation is ready! Choose your download format:</p>
            
            <div class="download-options">
                <div class="download-option" id="download-mp4">
                    <div class="download-option-icon">
                        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M10 8V16L15 12L10 8ZM19 3H5C3.9 3 3 3.9 3 5V19C3 20.1 3.9 21 5 21H19C20.1 21 21 20.1 21 19V5C21 3.9 20.1 3 19 3ZM19 19H5V5H19V19Z" fill="currentColor"/>
                        </svg>
                    </div>
                    <div class="download-option-text">
                        <div class="download-option-title">MP4 Video</div>
                        <div class="download-option-description">High-quality video for TikTok, Instagram, etc.</div>
                    </div>
                </div>
                
                <div class="download-option" id="download-gif">
                    <div class="download-option-icon">
                        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M11.5 9H13V15H11.5V9ZM9 9H10.5V15H9V9ZM3 3V21H21V3H3ZM19.5 19.5H4.5V4.5H19.5V19.5ZM14.5 15V9H16V15H14.5Z" fill="currentColor"/>
                        </svg>
                    </div>
                    <div class="download-option-text">
                        <div class="download-option-title">GIF Animation</div>
                        <div class="download-option-description">Animated GIF for websites and quick sharing</div>
                    </div>
                </div>
                
                <div class="download-option" id="download-png">
                    <div class="download-option-icon">
                        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M19 3H5C3.9 3 3 3.9 3 5V19C3 20.1 3.9 21 5 21H19C20.1 21 21 20.1 21 19V5C21 3.9 20.1 3 19 3ZM19 19H5V5H19V19ZM13.96 12.29L11.21 15.83L9.25 13.47L6.5 17H17.5L13.96 12.29Z" fill="currentColor"/>
                        </svg>
                    </div>
                    <div class="download-option-text">
                        <div class="download-option-title">PNG Screenshot</div>
                        <div class="download-option-description">High-quality static image</div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Copied Notification -->
    <div class="copied-notification" id="copied-notification">
        Copied to clipboard!
    </div>

    <script>
        // Tab Navigation
        const tabs = document.querySelectorAll('.tab');
        const contents = document.querySelectorAll('.content');
        
        tabs.forEach(tab => {
            tab.addEventListener('click', () => {
                const target = tab.dataset.tab;
                
                // Update tabs
                tabs.forEach(t => t.classList.remove('active'));
                tab.classList.add('active');
                
                // Update content
                contents.forEach(c => c.classList.remove('active'));
                document.getElementById(`${target}-tab`).classList.add('active');
            });
        });
        
        // Notification Generator
        const generateNotificationBtn = document.getElementById('generate-notification');
        const previewNotificationBtn = document.getElementById('preview-notification');
        const notification = document.getElementById('notification');
        const notificationMessage = document.getElementById('notification-message');
        const notificationTime = document.getElementById('notification-time');
        
        function generateNotificationText() {
            const customerName = document.getElementById('customer-name').value || 'John';
            const location = document.getElementById('location').value || 'New York, NY';
            const amount = document.getElementById('amount').value || '$49.99';
            const time = document.getElementById('time').value;
            const notificationType = document.getElementById('notification-type').value;
            const productName = document.getElementById('product-name').value || 'product';
            
            let message = '';
            
            switch(notificationType) {
                case 'new-order':
                    message = `New order of ${amount} from ${customerName} in ${location}!`;
                    break;
                case 'abandoned-cart':
                    message = `${customerName} from ${location} added ${productName} worth ${amount} to cart!`;
                    break;
                case 'customer-signup':
                    message = `New customer signup: ${customerName} from ${location}!`;
                    break;
                case 'revenue-goal':
                    message = `You've reached your daily revenue goal of ${amount}! 🎉`;
                    break;
                default:
                    message = `New order of ${amount} from ${customerName} in ${location}!`;
            }
            
            return { message, time };
        }
        
        function showNotification(autoHide = false) {
            const { message, time } = generateNotificationText();
            
            notificationMessage.textContent = message;
            notificationTime.textContent = time;
            
            notification.style.display = 'block';
            notification.style.animation = 'none';
            notification.offsetHeight; // Trigger reflow
            notification.style.animation = autoHide ? 'slideIn 0.5s forwards, slideOut 0.5s forwards 5s' : 'slideIn 0.5s forwards';
            
            updateDashboardWithRecentOrder();
        }
        
        generateNotificationBtn.addEventListener('click', () => showNotification(true));
        previewNotificationBtn.addEventListener('click', () => showNotification(false));
        
        // Dashboard Updater
        const updateDashboardBtn = document.getElementById('update-dashboard');
        const addOrderBtn = document.getElementById('add-order');
        
        function updateDashboard() {
            const storeName = document.getElementById('store-name').value || 'Your Store';
            const totalSales = document.getElementById('total-sales').value || '$0.00';
            const ordersCount = document.getElementById('orders-count').value || '0';
            const conversionRate = document.getElementById('conversion-rate').value || '0%';
            const visitorsCount = document.getElementById('visitors-count').value || '0';
            
            document.getElementById('dashboard-total-sales').textContent = totalSales;
            document.getElementById('dashboard-orders').textContent = ordersCount;
            document.getElementById('dashboard-conversion').textContent = conversionRate;
            document.getElementById('dashboard-visitors').textContent = visitorsCount;
            
            // Show dashboard simulator
            document.querySelector('.dashboard-simulator').style.display = 'flex';
        }
        
        function updateDashboardWithRecentOrder() {
            const customerName = document.getElementById('customer-name').value || 'John';
            const amount = document.getElementById('amount').value || '$49.99';
            const productName = document.getElementById('product-name').value || 'product';
            
            // Update orders table if needed for the dashboard view
            const ordersTableBody = document.getElementById('orders-tbody');
            if (ordersTableBody) {
                const newOrderRow = document.createElement('tr');
                const orderNumber = Math.floor(1000 + Math.random() * 9000);
                
                const today = new Date();
                const formattedDate = `${today.getMonth() + 1}/${today.getDate()}/${today.getFullYear()}`;
                
                newOrderRow.innerHTML = `
                    <td>#${orderNumber}</td>
                    <td>${formattedDate}</td>
                    <td>${customerName}</td>
                    <td>${amount}</td>
                    <td><span class="order-status status-paid">Paid</span></td>
                    <td><span class="order-status status-unfulfilled">Unfulfilled</span></td>
                `;
                
                // If table already has content, insert at the top
                if (ordersTableBody.firstChild) {
                    ordersTableBody.insertBefore(newOrderRow, ordersTableBody.firstChild);
                } else {
                    ordersTableBody.appendChild(newOrderRow);
                }
            }
        }
        
        updateDashboardBtn.addEventListener('click', updateDashboard);
        
        addOrderBtn.addEventListener('click', () => {
            const customerName = document.getElementById('customer-name').value || 'Customer';
            const amount = document.getElementById('amount').value || '$49.99';
            const productName = document.getElementById('product-name').value || 'Product';
            
            // You would implement adding a new order here
            alert(`Added order for ${customerName}: ${productName} - ${amount}`);
        });
        
        // Recording Functionality
        const recordButton = document.getElementById('record-button');
        const downloadButton = document.getElementById('download-button');
        const recordingProgress = document.getElementById('recording-progress');
        const recordingTime = document.getElementById('recording-time');
        const downloadModal = document.getElementById('download-modal');
        const modalClose = document.getElementById('modal-close');
        
        let isRecording = false;
        let recordingInterval;
        let recordingDuration = 0;
        let maxDuration = 5; // Default 5 seconds
        
        recordButton.addEventListener('click', () => {
            if (!isRecording) {
                startRecording();
            } else {
                stopRecording();
            }
        });
        
        downloadButton.addEventListener('click', () => {
            downloadModal.classList.add('show');
        });
        
        modalClose.addEventListener('click', () => {
            downloadModal.classList.remove('show');
        });
        
        document.getElementById('download-mp4').addEventListener('click', () => {
            simulateDownload('mp4');
        });
        
        document.getElementById('download-gif').addEventListener('click', () => {
            simulateDownload('gif');
        });
        
        document.getElementById('download-png').addEventListener('click', () => {
            simulateDownload('png');
        });
        
        function startRecording() {
            isRecording = true;
            recordButton.classList.add('recording');
            
            maxDuration = parseInt(document.getElementById('recording-duration').value) || 5;
            recordingDuration = 0;
            updateRecordingProgress();
            
            // Show the notification if we're recording notifications
            const recordingType = document.getElementById('recording-type').value;
            if (recordingType === 'notification' || recordingType === 'both') {
                showNotification(false);
            }
            
            // Show the dashboard if we're recording dashboard
            if (recordingType === 'dashboard' || recordingType === 'both') {
                updateDashboard();
            }
            
            recordingInterval = setInterval(() => {
                recordingDuration += 0.1;
                updateRecordingProgress();
                
                if (recordingDuration >= maxDuration) {
                    stopRecording();
                }
            }, 100);
        }
        
        function stopRecording() {
            isRecording = false;
            recordButton.classList.remove('recording');
            clearInterval(recordingInterval);
            
            // Enable download button
            downloadButton.disabled = false;
            
            // Show a success message
            showCopiedNotification('Recording complete! Ready to download.');
        }
        
        function updateRecordingProgress() {
            const progress = (recordingDuration / maxDuration) * 100;
            recordingProgress.style.width = `${progress}%`;
            
            const minutes = Math.floor(recordingDuration / 60);
            const seconds = Math.floor(recordingDuration % 60);
            recordingTime.textContent = `${minutes}:${seconds.toString().padStart(2, '0')}`;
        }
        
        function simulateDownload(format) {
            showCopiedNotification(`Downloading as ${format.toUpperCase()}...`);
            
            // Hide modal
            downloadModal.classList.remove('show');
            
            // In a real implementation, this would create and download the actual file
            // For this demo, we'll simulate a download after a delay
            setTimeout(() => {
                showCopiedNotification(`${format.toUpperCase()} Downloaded Successfully!`);
            }, 2000);
        }
        
        function showCopiedNotification(message) {
            const notification = document.getElementById('copied-notification');
            notification.textContent = message;
            notification.classList.add('show');
            
            setTimeout(() => {
                notification.classList.remove('show');
            }, 3000);
        }
        
        // Initial setup
        updateDashboard();
        
        // Populate orders table with sample data
        function populateOrdersTable() {
            const ordersTableBody = document.getElementById('orders-tbody');
            
            const sampleOrders = [
                {
                    order: '#1002',
                    date: '5/15/2025',
                    customer: 'James Wilson',
                    total: '$94.99',
                    payment: 'Paid',
                    fulfillment: 'Fulfilled'
                },
                {
                    order: '#1001',
                    date: '5/14/2025',
                    customer: 'Sarah Johnson',
                    total: '$127.50',
                    payment: 'Paid',
                    fulfillment: 'Unfulfilled'
                },
                {
                    order: '#1000',
                    date: '5/12/2025',
                    customer: 'Michael Smith',
                    total: '$89.99',
                    payment: 'Paid',
                    fulfillment: 'Fulfilled'
                }
            ];
            
            sampleOrders.forEach(order => {
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td>${order.order}</td>
                    <td>${order.date}</td>
                    <td>${order.customer}</td>
                    <td>${order.total}</td>
                    <td><span class="order-status status-paid">${order.payment}</span></td>
                    <td><span class="order-status ${order.fulfillment === 'Fulfilled' ? 'status-fulfilled' : 'status-unfulfilled'}">${order.fulfillment}</span></td>
                `;
                ordersTableBody.appendChild(row);
            });
        }
        
        populateOrdersTable();
    </script>
</body>
</html><!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Shopify Notification Simulator</title>
    <style>
        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
            background-color: #f5f5f5;
            margin: 0;
            padding: 20px;
        }
        
        .container {
            max-width: 600px;
            margin: 0 auto;
        }
        
        h1 {
            color: #212b36;
            text-align: center;
        }
        
        .form-group {
            margin-bottom: 15px;
        }
        
        label {
            display: block;
            margin-bottom: 5px;
            font-weight: bold;
            color: #212b36;
        }
        
        input, select {
            width: 100%;
            padding: 10px;
            border: 1px solid #c4cdd5;
            border-radius: 4px;
            font-size: 16px;
            box-sizing: border-box;
        }
        
        button {
            background-color: #008060;
            color: white;
            border: none;
            padding: 12px 20px;
            font-size: 16px;
            border-radius: 4px;
            cursor: pointer;
            width: 100%;
            margin-top: 10px;
        }
        
        button:hover {
            background-color: #006e52;
        }
        
        .notification-preview {
            position: relative;
            width: 100%;
            height: 500px;
            border: 1px solid #ddd;
            border-radius: 8px;
            margin-top: 20px;
            background-color: #fff;
            overflow: hidden;
        }
        
        .phone-frame {
            position: relative;
            width: 270px;
            height: 480px;
            margin: 10px auto;
            border: 10px solid #000;
            border-radius: 30px;
            overflow: hidden;
            background-color: #fff;
        }
        
        .notification {
            position: absolute;
            top: 10px;
            left: 10px;
            right: 10px;
            background-color: rgba(255, 255, 255, 0.95);
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
            padding: 12px;
            animation: slideIn 0.5s forwards;
            z-index: 100;
            display: none;
        }
        
        @keyframes slideIn {
            from {
                transform: translateY(-100%);
            }
            to {
                transform: translateY(0);
            }
        }
        
        .notification-header {
            display: flex;
            align-items: center;
            margin-bottom: 8px;
        }
        
        .app-icon {
            width: 20px;
            height: 20px;
            background-color: #008060;
            border-radius: 5px;
            margin-right: 8px;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        
        .app-icon img {
            width: 16px;
            height: 16px;
        }
        
        .app-name {
            font-weight: bold;
            font-size: 14px;
        }
        
        .notification-body {
            font-size: 14px;
        }
        
        .time {
            font-size: 12px;
            color: #637381;
            margin-top: 4px;
        }
        
        .controls {
            display: flex;
            justify-content: space-between;
            margin-top: 20px;
        }
        
        .screenshot-btn {
            background-color: #5c6ac4;
        }
        
        .screenshot-btn:hover {
            background-color: #4959bd;
        }
        
        /* Shopify icon */
        .shopify-bag {
            color: white;
            font-size: 12px;
            font-weight: bold;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Shopify Notification Simulator</h1>
        <p style="text-align: center; color: #637381;">For demonstration and testing purposes only.</p>
        
        <div class="form-group">
            <label for="customer-name">Customer Name</label>
            <input type="text" id="customer-name" placeholder="John Smith">
        </div>
        
        <div class="form-group">
            <label for="location">Location</label>
            <input type="text" id="location" placeholder="New York, NY">
        </div>
        
        <div class="form-group">
            <label for="amount">Order Amount</label>
            <input type="text" id="amount" placeholder="$49.99">
        </div>
        
        <div class="form-group">
            <label for="time">Time</label>
            <select id="time">
                <option value="Just now">Just now</option>
                <option value="1 minute ago">1 minute ago</option>
                <option value="5 minutes ago">5 minutes ago</option>
                <option value="10 minutes ago">10 minutes ago</option>
            </select>
        </div>
        
        <div class="form-group">
            <label for="notification-type">Notification Type</label>
            <select id="notification-type">
                <option value="new-order">New Order</option>
                <option value="abandoned-cart">Abandoned Cart</option>
                <option value="customer-signup">New Customer</option>
            </select>
        </div>
        
        <button id="generate-btn">Generate Notification</button>
        
        <div class="controls">
            <button id="screenshot-btn" class="screenshot-btn">Take Screenshot</button>
        </div>
        
        <div class="notification-preview">
            <div class="phone-frame">
                <div id="notification" class="notification">
                    <div class="notification-header">
                        <div class="app-icon">
                            <span class="shopify-bag">S</span>
                        </div>
                        <div class="app-name">Shopify</div>
                    </div>
                    <div class="notification-body" id="notification-message">
                        New order of $49.99 from John in New York!
                    </div>
                    <div class="time" id="notification-time">Just now</div>
                </div>
            </div>
        </div>
    </div>

    <script>
        document.getElementById('generate-btn').addEventListener('click', function() {
            const customerName = document.getElementById('customer-name').value || 'John';
            const location = document.getElementById('location').value || 'New York, NY';
            const amount = document.getElementById('amount').value || '$49.99';
            const time = document.getElementById('time').value;
            const notificationType = document.getElementById('notification-type').value;
            
            let message = '';
            
            switch(notificationType) {
                case 'new-order':
                    message = `New order of ${amount} from ${customerName} in ${location}!`;
                    break;
                case 'abandoned-cart':
                    message = `${customerName} from ${location} added items worth ${amount} to cart!`;
                    break;
                case 'customer-signup':
                    message = `New customer signup: ${customerName} from ${location}!`;
                    break;
                default:
                    message = `New order of ${amount} from ${customerName} in ${location}!`;
            }
            
            document.getElementById('notification-message').textContent = message;
            document.getElementById('notification-time').textContent = time;
            
            const notification = document.getElementById('notification');
            notification.style.display = 'block';
            
            // Reset animation
            notification.style.animation = 'none';
            notification.offsetHeight; // Trigger reflow
            notification.style.animation = 'slideIn 0.5s forwards';
        });
        
        document.getElementById('screenshot-btn').addEventListener('click', function() {
            alert('In a real application, this would capture a screenshot of the notification. For demonstration purposes, you can use your device\'s screenshot functionality.');
        });
    </script>
</body>
</html>
